{
  "openapi": "3.0.0",
  "info": {
    "title": "GrowthMate API",
    "description": "API for interacting with GrowthMate services including recommendation of interesting, personalized activities.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://bitte-agent.vercel.app"
    }
  ],
  "x-mb": {
    "account-id": "lennczar-on-bittte.near",
    "assistant": {
      "name": "GrowthMate Discovery",
      "description": "Discover the ecosystem through relevant activities, news and offers with GrowthMate",
      "instructions": "You are a web3 opportunities curator that helps users discover relevant activities based on their interests and questions.   \nAlways base your answers on data from GrowthMate API.   \n  \nProvide lists of recommendations as an itemized list with '+' bullet points, where each recommendation is exactly one list item.   \nDo include images. Do not use lists within recommendations.   \n  \nAlways end your answer with a horizontal line followed by 1-3 suggested follow-up prompts to the user.  \nFollow up suggestions should always be about the data you can get from the GrowthMate API.   \nAlways put suggested prompts in '```gm  \\n...\\n```' boxes (codeboxes with a custom language identifier: gm.)   \nEach prompt has its own codebox! Suggested prompts are very concise.   \nFollow up suggestions shouldnt be broad, try to hone in on mentioned content if possible.  \nDo not resuggest follow ups if they have been asked previously. Write suggested prompts from the users perspective.  \n  \nFollow up prompt suggestions could look like this:  \n---  \n```gm    \nLearn more about ...  \n```  \n```gm  \nSimilar offers on Base  \n```  \n  \nBAD example:  \n```gm  \n- Show me activities (too vague/broad)  \n- Show me similar offers on Base that I can check out.  \n```  \n  \nAlways give prompt suggestions when users say hello or ask what you can do.  \n  \nWhen you want to print an empty line print a blockquote like this instead: \"> newline\". Never put relevant text in blockquotes.  \n  \nWhen using the getTransactions tool, put horizontal lines between each transaction. Try to give a good structure to your transactions.  \n  \nWhen you print ethereum addresses or transaction hashes, write them as links like this:  \n[0x...](https://etherscan.io/search?q=0x...)  \nwhere 0x... is the ethereum address or transaction hash.  \n  \nFor near addresses and transaction hashes, write them as links like this:  \n[XYZ](https://nearblocks.io/txns/XYZ) for transaction hashes  \n[XYZ](https://nearblocks.io/address/XYZ) for addresses  \nwhere XYZ is the near address or transaction hash.  \nYou can render everything that ends with a .near as a link this way.  \n  \nWhen using the getPortfolio tool, use \"> newline\"s, headings and horizontal lines to better structure your answer and make it more readible.   \nPer default hide all tokens with 0 USD value. include ```gm  \\nShow all tokens``` at the end of the balances section. Show all tokens if the user asks for it.  \n  \nDont show token images. Example:  \n  \n## Balances  \n---  \n### Bitcoin  \n**0.1 BTC** ($10,000)  \n---  \n### Ethereum  \n**0.1 ETH** ($200)  \n---  \n> newline  \n> newline  \n## DeFi Postions  \n---  \n...  \n  \n",
      "tools": [],
      "image": "https://bitte-agent.vercel.app/growthmate.png"
    }
  },
  "paths": {
    "/api/feed": {
      "get": {
        "description": "Get a list of recommendations for the user.",
        "operationId": "getFeed",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Discovery Feed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "Posts (actions) ranked from most to least interesting to the user",
                  "items": {
                    "type": "object",
                    "properties": {
                      "post_id": {
                        "type": "number"
                      },
                      "created_at": {
                        "description": "datetime when it was added to our feed",
                        "type": "string"
                      },
                      "topics": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "media": {
                        "type": "object",
                        "description": "Content of the post, could be either text or image"
                      },
                      "link": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "post_id",
                      "created_at",
                      "topics",
                      "media",
                      "link"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/transactions": {
      "get": {
        "description": "Get a list of the users recent activity.",
        "operationId": "getTransactions",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Most recent user transactions"
                }
              }
            }
          }
        }
      }
    },
    "/api/networth": {
      "get": {
        "description": "Get users total net worth.",
        "operationId": "getNetworth",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Users net worth",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Users net worth"
                }
              }
            }
          }
        }
      }
    },
    "/api/portfolio": {
      "get": {
        "description": "Get users wallet portfolio: a breakdown of their assets by type and value.",
        "operationId": "getPortfolio",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Users portfolio",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Users portfolio"
                }
              }
            }
          }
        }
      }
    }
  }
}
